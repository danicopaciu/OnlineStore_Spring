<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd ">

    <beans:import resource="mvc-dispatcher-servlet.xml"/>

    <http use-expressions="true">
        <intercept-url pattern="/" access="permitAll"/>
        <intercept-url pattern="/register" access="permitAll"/>
        <intercept-url pattern="/login**" access="permitAll" requires-channel="http"/>
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" requires-channel="http"/>
        <intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" requires-channel="http"/>
        <intercept-url pattern="/**" access="isAuthenticated()" requires-channel="http"/>
        <form-login
                login-page="/"
                authentication-success-handler-ref="myAuthenticationSuccessHandler"
                authentication-failure-handler-ref="myAuthenticationFailureHandler"
                username-parameter="username"
                password-parameter="password"/>
        <logout logout-success-url="/login?logout=true"/>
        <csrf/>
    </http>

    <beans:bean name="logoutFilter" class="com.springapp.mvc.authentication.BeforeLogoutFilter"/>

    <beans:bean id="myAuthenticationSuccessHandler"
                class="com.springapp.mvc.authentication.SuccessRoleBasedAuthenticationHandler">
        <beans:property name="redirectStrategy" ref="redirectStrategy" />
    </beans:bean>

    <beans:bean id="myAuthenticationFailureHandler"
                class="com.springapp.mvc.authentication.FailureRoleBasedAuthenticationHandler" >
        <beans:property name="redirectStrategy" ref="redirectStrategy" />
    </beans:bean>

    <beans:bean id="redirectStrategy" class="org.springframework.security.web.DefaultRedirectStrategy"/>
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--<authentication-manager>-->
        <!--<authentication-provider>-->
            <!--<user-service>-->
                <!--<user name="daniel" password="123" authorities="ROLE_USER"/>-->
                <!--<user name="admin" password="123" authorities="ROLE_ADMIN"/>-->
            <!--</user-service>-->
        <!--</authentication-provider>-->
    <!--</authentication-manager>-->

    <beans:bean id="myUserDetailsService" class="service.UserDataService">
        <beans:property name="userDao" ref="userDao" />
    </beans:bean>

    <beans:bean id="userService" class="service.UserServiceImpl">
        <beans:property name="userDao" ref="userDao"/>
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
    </beans:bean>

    <beans:bean id="userDao" class="persistence.dao.UserDaoImpl" />

    <authentication-manager>
        <authentication-provider user-service-ref="myUserDetailsService" >
            <password-encoder hash="bcrypt" />
        </authentication-provider>
    </authentication-manager>


</beans:beans>